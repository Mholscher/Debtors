Creating debt: money is due
===========================

Another system is creating the debt
-----------------------------------

Normally another system will be creating the debt. Sales are made and with that a client gets the obligation to pay. The debtors system is notified by the system that knows it needs to be created by an interface. For a description see :ref:`requestbill`

The interface will lead to the creation of a debt. For each debt there is one client who is identified in the message. The client is assumed to be administrated in an external system. For testing purposes a very simple client system (:ref:`democlientsystem`) is provided. For the debt the following client and general data needs to be provided:

+------------------------+--------------------+-----------+----------+
| Field name             |Source              | Optional? | Default  |
+========================+====================+===========+==========+
| a bill id              | the debtors system | n/a       | n/a      |              
+------------------------+--------------------+-----------+----------+
| the client id          | the source system  | Mandatory | n/a      |
+------------------------+--------------------+-----------+----------+
| billing currency       | the source system  | optional  | EUR      |
+------------------------+--------------------+-----------+----------+
| date of the sale       | the source system  | Mandatory | n/a      |
+------------------------+--------------------+-----------+----------+
| date of the bill       | the debtor system  | optional  | today    |
+------------------------+--------------------+-----------+----------+
| bill this one replaces | the source system  | Optional  | None     |
+------------------------+--------------------+-----------+----------+
| bill status            | the debtor system  | Mandatory | New      |
+------------------------+--------------------+-----------+----------+

The debt will have a unique id, determined by the debtors system.

The date of the bill is said to be optional, because after creation at first the date is not filled. It is set by the process of producing the notification to the client. See :ref:`notification`

The debt will be detailed in lines. Each line will contain 

+------------------------+--------------------+-----------+----------+
| Field name             |Source              | Optional? | Default  |
+========================+====================+===========+==========+
| a bill id              | the debtors system | n/a       | n/a      |              
+------------------------+--------------------+-----------+----------+
| a line id              | the debtors system | n/a       | n/a      |              
+------------------------+--------------------+-----------+----------+
| short description      | the source system  | Mandatory | n/a      |
+------------------------+--------------------+-----------+----------+
| long description       | the source system  | optional  | None     |
+------------------------+--------------------+-----------+----------+
| number of units or     | the source system  | optional  | 1        |
| measure                |                    |           |          | 
+------------------------+--------------------+-----------+----------+
| description of the     | the source system  | optional  | None     |
| measure                |                    |           |          | 
+------------------------+--------------------+-----------+----------+
| unit price             | the source system  | Mandatory | None     |
+------------------------+--------------------+-----------+----------+

Manually creating a debt
------------------------

A transaction will be supplied to manually create a debt. The same fields detailed above need to be filled by data entry. Notification and accounting are done the same way as for a system supplied debt. Fields for the bill are filled as follows:

    :a bill id: The bill id is generated by the debtors system.
    :the client id: Needs to be supplied by data entry. Must be a valid client in the client system.
    :the billing currency: Supplied by data entry, but optional.
    :billing date: the date the bill was produced.
    :the date the sale was made: Supplied by data entry. Cannot be more than a year in the past, nor in the future.
    :the bill this one replaces: Supplied by data entry, but optional. Must be a valid bill, whose status will be set to superseded
    :bill status: Generated by the debtors system.

For each line we fill fields as follows:

    :a bill id: The bill id is taken from the current bill.
    :a line id: the line id will be generated by the debtors system
    :a short description: Needs to be supplied by data entry.
    :a long description: Needs to be supplied by data entry.
    :a number of units or measures: Supplied by data entry, but optional.
    :a description of the measure: Supplied by data entry, but optional.
    :a unit price: Needs to be supplied by data entry.

Debt inquiries
--------------

We can request information about the debt. The following inquiries are possible

    :client debt: All outstanding (unpaid) bills are listed
    :bill inquiry: A specific bill is shown with all lines included
    :client history: All bills and payments are listed


.. _notification:

Notification of the client
--------------------------------

The client will be notified of the debt. The client administration needs to supply the data for how to notify. The simple system supplied for testing supports electronic mail as well as traditional mail. Notifications are kept simple on purpose, because they of course need adjusting for each individual installation. **TODO link to tech docs.**

Notification starts the overdue processing. A client is supposed to be paying within a number of days from the notification. However, it may be the date of the sale as passed by the system that has processed the sale, depending on configuration. 

The debt is recognized at this moment, so we need to reflect that in the financial administration, so now do the accounting as described in :ref:`accountingrules` on "amount becomes due".
